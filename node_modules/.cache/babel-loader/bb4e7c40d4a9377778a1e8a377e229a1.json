{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\khan pc\\\\Desktop\\\\HNW\\\\src\\\\App.js\";\nimport React from 'react';\nimport SlidesShowStore from '../stores/SlidesShowStore';\nimport SlidesShowActions from '../actions/SlidesShowActions';\nimport Slides from '../components/Slides';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass SlidesShow extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = SlidesShowStore.getState();\n    this.onChange = this.onChange.bind(this);\n    this.IMAGES = [];\n  }\n\n  componentDidMount() {\n    SlidesShowStore.listen(this.onChange);\n    this.tick();\n    SlidesShowActions.startTimer();\n    this.handleChange();\n  }\n\n  componentWillUnmount() {\n    SlidesShowStore.unlisten(this.onChange);\n  }\n\n  onChange(state) {\n    this.setState(state);\n  }\n\n  handleChange() {\n    this.setState(SlidesShowStore.getState());\n  }\n\n  toggleNext(event) {\n    event.preventDefault();\n    var current = this.state.currentSlide;\n    var next = current + 1;\n\n    if (next > this.IMAGES.length - 1) {\n      next = 0;\n    }\n\n    this.setState({\n      currentSlide: next\n    });\n  }\n\n  togglePrev(event) {\n    event.preventDefault();\n    var current = this.state.currentSlide;\n    var prev = current - 1;\n\n    if (prev < 0) {\n      prev = this.IMAGES.length - 1;\n    }\n\n    this.setState({\n      currentSlide: prev\n    });\n  }\n\n  toggleSlide(id) {\n    var index = this.IMAGES.map(function (el) {\n      return el.id;\n    });\n    var currentIndex = index.indexOf(id);\n    this.setState({\n      currentSlide: currentIndex\n    });\n  }\n\n  Next() {\n    var current = this.state.currentSlide;\n    var next = current + 1;\n\n    if (next > this.IMAGES.length - 1) {\n      next = 0;\n    }\n\n    this.setState({\n      currentSlide: next\n    });\n  }\n\n  tick() {\n    var self = this;\n    this.interval = setTimeout(function () {\n      if (self.state.status === 'stop') {\n        self.interval = undefined;\n        return;\n      }\n\n      if (self.state.timeLeft <= 0) {\n        SlidesShowActions.timeout();\n      } else {\n        SlidesShowActions.tick();\n        self.Next();\n      }\n\n      self.tick();\n    }, 1000);\n  }\n\n  handleClickStart(event) {\n    event.preventDefault();\n    this.tick();\n    SlidesShowActions.startTimer();\n    this.handleChange();\n  }\n\n  handleClickStop(event) {\n    event.preventDefault();\n    SlidesShowActions.stopTimer();\n    this.handleChange();\n  }\n\n  handleClickReset(event) {\n    event.preventDefault();\n    SlidesShowActions.resetTimer();\n  }\n\n  render() {\n    this.IMAGES = [{\n      id: \"slide1\",\n      imagePath: \"/img/img1.jpg\",\n      imageAlt: \"Slide 1 Image\",\n      title: \"Slide 1\",\n      subtitle: \"Slide 1 Image SubTitle\",\n      text: \"Slide 1 Image Text\",\n      action: \"Slide 1 Image Action\",\n      actionHref: \"href\"\n    }, {\n      id: \"slide2\",\n      imagePath: \"/img/img2.jpg\",\n      imageAlt: \"Slide 2 Image\",\n      title: \"Slide 2\",\n      subtitle: \"Slide 2 Image SubTitle\",\n      text: \"Slide 2 Image Text\",\n      action: \"Slide 2 Image Action\",\n      actionHref: \"href\"\n    }, {\n      id: \"slide3\",\n      imagePath: \"/img/img3.jpg\",\n      imageAlt: \"Slide 3 Image\",\n      title: \"Slide 3\",\n      subtitle: \"Slide 3 Image SubTitle\",\n      text: \"Slide 3 Image Text\",\n      action: \"Slide 3 Image Action\",\n      actionHref: \"href\"\n    }];\n    var self = this;\n    var paginationNodes = this.IMAGES.map(function (paginationNode, i) {\n      var boundClick = self.toggleSlide.bind(self, paginationNode.id);\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"pager\",\n        onClick: boundClick,\n        children: [\"  key=\", paginationNode.Title, \"  \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"slideshow\",\n        children: [/*#__PURE__*/_jsxDEV(\"link\", {\n          rel: \"stylesheet\",\n          href: \"css/styles.css\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Slides, {\n          data: this.IMAGES,\n          currentSlide: this.state.currentSlide\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pagination\",\n          children: paginationNodes\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"toggle toggle--prev\",\n          onClick: this.togglePrev.bind(this),\n          children: \"Prev\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"toggle toggle--next\",\n          onClick: this.toggleNext.bind(this),\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.handleClickStart.bind(this),\n          children: \"Start\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.handleClickStop.bind(this),\n          children: \"Stop\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.handleClickReset.bind(this),\n          children: \"Reset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 5\n    }, this);\n  }\n\n}\n\nexport default SlidesShow;","map":{"version":3,"sources":["C:/Users/khan pc/Desktop/HNW/src/App.js"],"names":["React","SlidesShowStore","SlidesShowActions","Slides","SlidesShow","Component","constructor","props","state","getState","onChange","bind","IMAGES","componentDidMount","listen","tick","startTimer","handleChange","componentWillUnmount","unlisten","setState","toggleNext","event","preventDefault","current","currentSlide","next","length","togglePrev","prev","toggleSlide","id","index","map","el","currentIndex","indexOf","Next","self","interval","setTimeout","status","undefined","timeLeft","timeout","handleClickStart","handleClickStop","stopTimer","handleClickReset","resetTimer","render","imagePath","imageAlt","title","subtitle","text","action","actionHref","paginationNodes","paginationNode","i","boundClick","Title"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport SlidesShowStore   from '../stores/SlidesShowStore';\nimport SlidesShowActions from '../actions/SlidesShowActions';\nimport Slides from '../components/Slides';\n\nclass SlidesShow extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = SlidesShowStore.getState();\n    this.onChange = this.onChange.bind(this);\n    this.IMAGES = [];\n  }\n\n  componentDidMount() {\n    SlidesShowStore.listen(this.onChange);\n    this.tick();\n    SlidesShowActions.startTimer();\n    this.handleChange();\n  }\n\n  componentWillUnmount() {\n    SlidesShowStore.unlisten(this.onChange);\n  }\n\n  onChange(state) {\n    this.setState(state);\n  }\n\n  handleChange() {\n    this.setState(SlidesShowStore.getState());\n  }\n\n  toggleNext( event) {\n    event.preventDefault();\n    var current = this.state.currentSlide;\n    var next = current + 1;\n    if (next > this.IMAGES.length - 1) {\n      next = 0;\n    }\n    this.setState( {currentSlide: next} );\n  }\n\n  togglePrev(event) {\n    event.preventDefault();   \n    var current = this.state.currentSlide;\n    var prev = current - 1;\n    if (prev < 0) {\n      prev = this.IMAGES.length - 1;\n    }\n    this.setState( {currentSlide: prev} );  \n  }   \n\n  toggleSlide(id) {\n    var index = this.IMAGES.map(function (el) {\n      return (\n        el.id\n      );\n    });\n    var currentIndex = index.indexOf(id);       \n    this.setState( {currentSlide: currentIndex} );\n  }\n\n  Next() {\n    var current = this.state.currentSlide;\n    var next = current + 1;\n    if (next > this.IMAGES.length - 1) {\n      next = 0;\n    }\n    this.setState( {currentSlide: next} );\n  }\n\n  tick() {\n    var self = this;\n    this.interval = setTimeout(function() {\n      if (self.state.status === 'stop') {\n        self.interval = undefined;\n        return;\n      }\n      if (self.state.timeLeft <= 0) {\n        SlidesShowActions.timeout();\n      } else {\n        SlidesShowActions.tick();\n        self.Next();\n      }\n      self.tick();\n    }, 1000);\n  }\n\n  handleClickStart(event) {\n    event.preventDefault();  \n    this.tick();\n    SlidesShowActions.startTimer();\n    this.handleChange();\n  }\n\n  handleClickStop(event) {\n    event.preventDefault(); \n    SlidesShowActions.stopTimer();\n    this.handleChange();\n  }\n\n  handleClickReset(event) {\n    event.preventDefault();  \n    SlidesShowActions.resetTimer();\n  }\n\n  render() {\n    this.IMAGES = [\n     {id: \"slide1\", imagePath : \"/img/img1.jpg\", imageAlt : \"Slide 1 Image\", title : \"Slide 1\", subtitle : \"Slide 1 Image SubTitle\", text : \"Slide 1 Image Text\", action : \"Slide 1 Image Action\", actionHref : \"href\"  },\n     {id: \"slide2\", imagePath : \"/img/img2.jpg\", imageAlt : \"Slide 2 Image\", title : \"Slide 2\", subtitle : \"Slide 2 Image SubTitle\", text : \"Slide 2 Image Text\", action : \"Slide 2 Image Action\", actionHref : \"href\"  },\n     {id: \"slide3\", imagePath : \"/img/img3.jpg\", imageAlt : \"Slide 3 Image\", title : \"Slide 3\", subtitle : \"Slide 3 Image SubTitle\", text : \"Slide 3 Image Text\", action : \"Slide 3 Image Action\", actionHref : \"href\"  }\n    ];\n\n    var self = this;\n    var paginationNodes = this.IMAGES.map(function (paginationNode, i) {\n      var boundClick = self.toggleSlide.bind(self, paginationNode.id);\n      return (\n        <span className=\"pager\" onClick={boundClick}>  key={paginationNode.Title}  </span>\n      );\n     });\n\n   return (  \n    <div className=\"container\">\n      <div className=\"slideshow\">\n        <link rel=\"stylesheet\" href=\"css/styles.css\" />\n        <Slides data={this.IMAGES} currentSlide={this.state.currentSlide} />\n        <div className=\"pagination\">{paginationNodes}</div>\n        <div className=\"toggle toggle--prev\" onClick={this.togglePrev.bind(this)}>Prev</div>\n        <div className=\"toggle toggle--next\" onClick={this.toggleNext.bind(this)}>Next</div>    \n        <button onClick={this.handleClickStart.bind(this)}>Start</button>\n        <button onClick={this.handleClickStop.bind(this)}>Stop</button>\n        <button onClick={this.handleClickReset.bind(this)}>Reset</button>   \n       </div>\n    </div>\n    );\n  }\n}\n\nexport default SlidesShow;\n"]},"metadata":{},"sourceType":"module"}